// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App renders correctly it looks the same as snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <ForwardRef(Bootstrap(Container))>
        <ForwardRef(Bootstrap(Jumbotron))
          style={
            Object {
              "marginTop": "20px",
              "textAlign": "center",
            }
          }
        >
          <h1>
            Banno Assignment
          </h1>
        </ForwardRef(Bootstrap(Jumbotron))>
        <CardC
          activity="Alpha Numeric Top 3"
          array={Array []}
          onClickHandler={[Function]}
        />
        <CardC
          activity="PNG Count"
          onClickHandler={[Function]}
        />
        <CardC
          activity="Count of Financial Instituation "
          onClickHandler={[Function]}
          result={0}
        />
        <CardC
          activity="Count of Products"
          onClickHandler={[Function]}
          result={0}
        />
        <CardC
          activity="Locate Twittle Handle Dynamically"
          onClickHandler={[Function]}
          result=""
        />
      </ForwardRef(Bootstrap(Container))>,
      "className": "App",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef(Bootstrap(Jumbotron))
            style={
              Object {
                "marginTop": "20px",
                "textAlign": "center",
              }
            }
          >
            <h1>
              Banno Assignment
            </h1>
          </ForwardRef(Bootstrap(Jumbotron))>,
          <CardC
            activity="Alpha Numeric Top 3"
            array={Array []}
            onClickHandler={[Function]}
          />,
          <CardC
            activity="PNG Count"
            onClickHandler={[Function]}
          />,
          <CardC
            activity="Count of Financial Instituation "
            onClickHandler={[Function]}
            result={0}
          />,
          <CardC
            activity="Count of Products"
            onClickHandler={[Function]}
            result={0}
          />,
          <CardC
            activity="Locate Twittle Handle Dynamically"
            onClickHandler={[Function]}
            result=""
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <h1>
              Banno Assignment
            </h1>,
            "style": Object {
              "marginTop": "20px",
              "textAlign": "center",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Banno Assignment",
            },
            "ref": null,
            "rendered": "Banno Assignment",
            "type": "h1",
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": undefined,
            "propTypes": undefined,
            "render": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activity": "Alpha Numeric Top 3",
            "array": Array [],
            "onClickHandler": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activity": "PNG Count",
            "onClickHandler": [Function],
            "result": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activity": "Count of Financial Instituation ",
            "onClickHandler": [Function],
            "result": 0,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activity": "Count of Products",
            "onClickHandler": [Function],
            "result": 0,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activity": "Locate Twittle Handle Dynamically",
            "onClickHandler": [Function],
            "result": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": undefined,
        "propTypes": undefined,
        "render": [Function],
      },
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <ForwardRef(Bootstrap(Container))>
          <ForwardRef(Bootstrap(Jumbotron))
            style={
              Object {
                "marginTop": "20px",
                "textAlign": "center",
              }
            }
          >
            <h1>
              Banno Assignment
            </h1>
          </ForwardRef(Bootstrap(Jumbotron))>
          <CardC
            activity="Alpha Numeric Top 3"
            array={Array []}
            onClickHandler={[Function]}
          />
          <CardC
            activity="PNG Count"
            onClickHandler={[Function]}
          />
          <CardC
            activity="Count of Financial Instituation "
            onClickHandler={[Function]}
            result={0}
          />
          <CardC
            activity="Count of Products"
            onClickHandler={[Function]}
            result={0}
          />
          <CardC
            activity="Locate Twittle Handle Dynamically"
            onClickHandler={[Function]}
            result=""
          />
        </ForwardRef(Bootstrap(Container))>,
        "className": "App",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef(Bootstrap(Jumbotron))
              style={
                Object {
                  "marginTop": "20px",
                  "textAlign": "center",
                }
              }
            >
              <h1>
                Banno Assignment
              </h1>
            </ForwardRef(Bootstrap(Jumbotron))>,
            <CardC
              activity="Alpha Numeric Top 3"
              array={Array []}
              onClickHandler={[Function]}
            />,
            <CardC
              activity="PNG Count"
              onClickHandler={[Function]}
            />,
            <CardC
              activity="Count of Financial Instituation "
              onClickHandler={[Function]}
              result={0}
            />,
            <CardC
              activity="Count of Products"
              onClickHandler={[Function]}
              result={0}
            />,
            <CardC
              activity="Locate Twittle Handle Dynamically"
              onClickHandler={[Function]}
              result=""
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <h1>
                Banno Assignment
              </h1>,
              "style": Object {
                "marginTop": "20px",
                "textAlign": "center",
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Banno Assignment",
              },
              "ref": null,
              "rendered": "Banno Assignment",
              "type": "h1",
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": undefined,
              "propTypes": undefined,
              "render": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "activity": "Alpha Numeric Top 3",
              "array": Array [],
              "onClickHandler": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "activity": "PNG Count",
              "onClickHandler": [Function],
              "result": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "activity": "Count of Financial Instituation ",
              "onClickHandler": [Function],
              "result": 0,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "activity": "Count of Products",
              "onClickHandler": [Function],
              "result": 0,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "activity": "Locate Twittle Handle Dynamically",
              "onClickHandler": [Function],
              "result": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "propTypes": undefined,
          "render": [Function],
        },
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
