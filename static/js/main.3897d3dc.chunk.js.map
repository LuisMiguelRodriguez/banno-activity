{"version":3,"sources":["components/Card/Card.js","components/helper/index.js","App.js","index.js"],"names":["CardC","props","react_default","a","createElement","Card","bg","className","Body","Title","activity","Button","onClick","onClickHandler","variant","Footer","result","array","map","item","i","key","concat","alpha","count","ProgressBar","now","Fragment","alphaNumerics_top3","dom","res","match","obj","forEach","newArr","temp","push","sortedArr","sort","current","next","console","log","pngCount","financialCount","length","productCount","$","cheerio","load","products","children","each","find","text","trim","findTwitterHandle","twitterHandle","liArr","html","attr","App","state","link","data","alphaNumerics","financialIntCount","getDom","axios","proxyurl","then","_ref","_this","setState","catch","err","handleAlphaNumerics","topAlphaNumerics","handlePngCount","handleFinancialCount","handleProductCount","handleTwitterHandle","this","Container","Jumbotron","style","textAlign","marginTop","Card_Card","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.3897d3dc.chunk.js","sourcesContent":["import React from 'react';\nimport { Card, Button, ProgressBar, CardColumns } from 'react-bootstrap';\n\n\n/** \n* \n* Card Component\n*\n* @function Card\n* @description - A function component used to display information passed down by props.\n* @param { Object } props - Props that will be passed down from parent component.\n* @param { String } props.activity - The name of the activity to display. \n* @param { Function } props.onClickHandler - The function that has been passed to run a speficic task.\n* @param { String } props.result - A string representing the results create by the onClickHandler that was invoked. \n* @param { Array } props.array - An array of results to map through.\n*/\n\nconst CardC = props => {\n\n    return (\n        <Card bg='light' className=\"text-center\">\n            <Card.Body >\n                <Card.Title className='test-title'>Activity - {props.activity}</Card.Title>\n                <Button onClick={props.onClickHandler} variant=\"primary\">Run Activity</Button>\n            </Card.Body>\n            <Card.Footer className=\"text-primary\">{props.result ? props.result : ''}</Card.Footer>\n            {\n                props.array ? props.array.map((item, i) => {\n                    return (\n                        // eslint-disable-next-line\n                        <Card.Footer className=\"text-primary\" key={i}>\n                            <h5>{`AlphaNumeric: ${item.alpha}  Count: ${item.count}`}</h5>\n                            <ProgressBar now={item.count} />\n                        </Card.Footer>\n                    )\n                }) : <></>\n            }\n        </Card>\n    )\n}\nexport default CardC;","import cheerio from 'cheerio';\n\nexport const alphaNumerics_top3 = dom => {\n\n    const res = dom.match(/([a-zA-z]+[\\d]+)|([\\d]+[a-zA-z]+)/g);\n    const obj = {};\n\n    // count repetitions of alphanumerics\n    res.forEach(item => {\n        if (obj[item] >= 0) {\n            obj[item] = obj[item] + 1;\n\n        } else {\n            obj[item] = 1;\n        }\n    })\n\n    // new array to hold alphanumerics count\n    let newArr = [];\n\n    for (let temp in obj) {\n        newArr.push({ alpha: temp, count: obj[temp] })\n    }\n\n    // Organized array by count value \n    var sortedArr = newArr.sort((current, next) => next.count - current.count);\n    console.log('== sorted array ===========')\n\n    let topThree = [sortedArr[0], sortedArr[1], sortedArr[2]]\n\n    return topThree;\n}\n\nexport const pngCount = dom => {\n    return dom.match(/.png/g);\n}\n\nexport const financialCount = dom => {\n    return dom.match(/financial institution/g).length;\n}\n\nexport const productCount = dom => {\n    const $ = cheerio.load(dom);\n\n    // Array to hold products found on the page\n    const products = [];\n\n    $('#sub-menu').children('li').each((i, item) => {\n\n        products.push($(item).find('span').text().trim());\n\n    })\n\n    return products.length;\n}\n\nexport const findTwitterHandle = dom => {\n    const $ = cheerio.load(dom);\n\n    let twitterHandle;\n\n    $('.footer-column').each((i, item) => {\n        let liArr = $(item).find('li');\n        $(liArr).each((i, item) => {\n\n            let linkText = $(item).children('a').html()\n\n            if (linkText === 'Twitter') {\n                console.log('Found it !')\n                twitterHandle = $(item).children('a').attr('href');\n\n            }\n        })\n    });\n    return twitterHandle;\n}","import React, { Component } from 'react';\nimport { Container, Jumbotron } from 'react-bootstrap';\nimport cheerio from 'cheerio';\nimport axios from 'axios';\nimport Card from './components/Card';\nimport { alphaNumerics_top3, pngCount, financialCount, productCount, findTwitterHandle } from './components/helper';\n\n/**\n * \n * App Component\n */\nclass App extends Component {\n\n\n  /**\n   * @property { String } link - Link to be used for webscraping.\n   * @property { string } data - Holds html from dom to be searched through.\n   * @property { Array }  alphaNumerics - An array that will hold the top 3 alphnumerics found.\n   * @property { Number } pngCount - A Count of PNG image found on the page.\n   * @property { Number } financialIntCount - A count of how many times financial institute shows on the page.\n   * @property { String } twitterHandle - Twitter Handle .\n   * @property { Number } productCount - A count of products found on the page.\n   * @memberof App\n   */\n\n  state = {\n    link: '',\n    data: '',\n    alphaNumerics: [],\n    pngCount: 0,\n    financialIntCount: 0,\n    twitterHandle: '',\n    productCount: 0\n  }\n\n  /**\n   *\n   * @function getDom\n   * @method - Makes an Axios request to retreive the html from the specified link.\n   * @memberof App\n   */\n  getDom = () => {\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    axios(proxyurl + 'http://www.banno.com')\n      .then(({ data }) => {\n\n        this.setState({ data })\n      })\n      .catch(err => console.log(err))\n\n  }\n\n  /**\n   *\n   * @method componentDidMount\n   * @description - On initial load componentDidMout will call the method getDom() to retreive the html from the link specified.\n   * @memberof App\n   */\n  componentDidMount() {\n    this.getDom();\n\n  }\n\n  /**\n   *\n   * @method handleAlphaNumerics\n   * @description - This method does a search for all alphanumerics on the page using a regex expression.\n   * @memberof App\n   */\n  handleAlphaNumerics = () => {\n\n    const $ = cheerio.load(this.state.data);\n    const dom = $('body').html();\n\n    // look only for alphanumeric \n    const topAlphaNumerics = alphaNumerics_top3(dom)\n\n    this.setState({ alphaNumerics: topAlphaNumerics })\n\n  }\n\n  /**\n   *\n   * @method handlePngCount\n   * @description - This method does a search for all .png occurences on the pages and keeps a count.\n   * @memberof App\n   */\n  handlePngCount = () => {\n\n    const $ = cheerio.load(this.state.data);\n    const dom = $('body').html();\n    this.setState({ pngCount: pngCount(dom) })\n\n  }\n\n  /**\n   *\n   * @method handleFinancialCount\n   * @description - Searches page for all occurences of `financial institution` with a regex expression and keeps a count.\n   * @memberof App\n   */\n  handleFinancialCount = () => {\n\n    const $ = cheerio.load(this.state.data);\n    const dom = $('body').html();\n    this.setState({ financialIntCount: financialCount(dom) })\n\n  }\n\n  /**\n   *\n   * @method handleProductCount\n   * @description - Searches for products on page by looking under the a dropdown menu which holds all a list of products.\n   * @memberof App\n   */\n  handleProductCount = () => {\n    this.setState({ productCount: productCount(this.state.data) })\n  }\n\n  /**\n   *\n   * @method handleTwitterHandle \n   * @description - Locates the twitter handle in the footer by looking through the li tags.\n   * @memberof App\n   */\n  handleTwitterHandle = () => {\n\n    this.setState({ twitterHandle: findTwitterHandle(this.state.data) })\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Container>\n          <Jumbotron style={{ textAlign: 'center', marginTop: '20px' }}>\n            <h1>Banno Assignment</h1>\n          </Jumbotron>\n          <Card onClickHandler={this.handleAlphaNumerics} activity={'Alpha Numeric Top 3'} array={this.state.alphaNumerics} />\n          <Card onClickHandler={this.handlePngCount} activity={'PNG Count'} result={this.state.pngCount.length} />\n          <Card onClickHandler={this.handleFinancialCount} activity={'Count of Financial Instituation '} result={this.state.financialIntCount} />\n          <Card onClickHandler={this.handleProductCount} activity={'Count of Products'} result={this.state.productCount} />\n          <Card onClickHandler={this.handleTwitterHandle} activity={'Locate Twittle Handle Dynamically'} result={this.state.twitterHandle} />\n        </Container>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}